{
	"name": "hackathona-backend",
	"version": "0.0.1",
	"description": "",
	"author": "",
	"private": true,
	"license": "UNLICENSED",
	"scripts": {
		"prebuild": "rimraf dist",
		"prestart": "npx knex migrate:latest",
		"prestart:dev": "export NODE_ENV=development && npx knex migrate:latest --env development",
		"prestart:prod": "export NODE_ENV=production && npx knex migrate:latest --env production --knexfile ./dist/knexfile.js",
		"build": "npx @nestjs/cli build",
		"postbuild": "cp .env.production dist/ && cp ./src/db/init.sql ./dist/src/db/init.sql && cp ./src/db/increment.sql ./dist/src/db/increment.sql",
		"format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
		"start": "export TZ=America/Sao_Paulo && nest start",
		"start:dev": "export NODE_ENV=development && export TZ=America/Sao_Paulo && nest start --watch",
		"start:debug": "nest start --debug --watch",
		"start:prod": "export NODE_ENV=production && export TZ=America/Sao_Paulo && node dist/src/main",
		"lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
		"lint:validate": "eslint \"{src,apps,libs,test}/**/*.ts\"",
		"test": "jest --passWithNoTests",
		"test:watch": "jest --watch",
		"test:cov": "jest --coverage --passWithNoTests",
		"test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
		"test:e2e": "jest --config ./test/jest-e2e.json --passWithNoTests --forceExit --detectOpenHandles",
		"test:e2e:debug": "node --inspect -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --config ./test/jest-e2e.json --passWithNoTests --forceExit --detectOpenHandles",
		"prerelease": "npm run lint:validate && npm run test:cov && npm run test:e2e && npm run build"
	},
	"dependencies": {
		"@nestjs/axios": "0.0.1",
		"@nestjs/common": "^8.0.0",
		"@nestjs/config": "^1.0.1",
		"@nestjs/core": "^8.0.0",
		"@nestjs/jwt": "^8.0.0",
		"@nestjs/mapped-types": "*",
		"@nestjs/passport": "^8.0.0",
		"class-transformer": "^0.4.0",
		"class-validator": "^0.13.1",
		"crypto-js": "^4.1.1",
		"knex": "^0.95.8",
		"knex-stringcase": "^1.4.5",
		"lodash": "^4.17.21",
		"mysql2": "^2.2.5",
		"passport": "^0.4.1",
		"passport-facebook-token": "^4.0.0",
		"passport-jwt": "^4.0.0",
		"passport-local": "^1.0.0",
		"reflect-metadata": "^0.1.13",
		"rimraf": "^3.0.2",
		"rxjs": "^7.2.0"
	},
	"devDependencies": {
		"@commitlint/cli": "^13.1.0",
		"@commitlint/config-conventional": "^13.1.0",
		"@nestjs/cli": "^8.0.0",
		"@nestjs/schematics": "^8.0.0",
		"@nestjs/testing": "^8.0.0",
		"@types/cron": "^1.7.3",
		"@types/crypto-js": "^4.0.2",
		"@types/express": "^4.17.13",
		"@types/jest": "^26.0.24",
		"@types/knex": "^0.16.1",
		"@types/lodash": "^4.14.172",
		"@types/node": "^16.0.0",
		"@types/passport-facebook-token": "^0.4.35",
		"@types/passport-jwt": "^3.0.6",
		"@types/passport-local": "^1.0.34",
		"@types/supertest": "^2.0.11",
		"@typescript-eslint/eslint-plugin": "^4.28.2",
		"@typescript-eslint/parser": "^4.28.2",
		"dotenv": "^10.0.0",
		"eslint": "^7.30.0",
		"eslint-config-prettier": "^8.3.0",
		"eslint-plugin-prettier": "^3.4.0",
		"husky": "^7.0.0",
		"jest": "27.0.6",
		"lint-staged": "^11.1.1",
		"prettier": "^2.3.2",
		"supertest": "^6.1.3",
		"ts-jest": "^27.0.3",
		"ts-loader": "^9.2.3",
		"ts-node": "^10.0.0",
		"tsconfig-paths": "^3.10.1",
		"typescript": "^4.3.5"
	},
	"jest": {
		"moduleFileExtensions": [
			"js",
			"json",
			"ts"
		],
		"rootDir": "src",
		"testRegex": ".*\\.spec\\.ts$",
		"transform": {
			"^.+\\.(t|j)s$": "ts-jest"
		},
		"collectCoverageFrom": [
			"**/*.(t|j)s"
		],
		"coverageThreshold": {
			"global": {
				"branches": 20,
				"functions": 30,
				"lines": 50,
				"statements": 50
			}
		},
		"coveragePathIgnorePatterns": [
			"node_modules",
			".spec.ts",
			".d.ts",
			".module.ts",
			".controller.ts",
			".guard.ts",
			".constant.ts",
			".strategy.ts",
			".stub.ts",
			".dto.ts",
			".pipe.ts",
			"src/main.ts",
			"src/constants/*.ts",
			"src/db/migrations/*.ts",
			"src/db/models/*.ts",
			"src/utils/middleware/google-maps.middleware.ts",
			"src/utils/locator/geolocation.locator.ts"
		],
		"coverageDirectory": "../coverage",
		"testEnvironment": "node"
	}
}
